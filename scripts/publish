#!/bin/bash

set -euo pipefail
IFS=$'\n\t'

RELEASE_TYPE=${1:-}

echo_help() {
  cat << EOF
USAGE:
    ./scripts/publish <release_type>

ARGS:
    <release_type>
            A Semantic Versioning release type used to bump the version number. Either "patch", "minor", or "major".
EOF
}

# Show help if no arguments passed
if [ $# -eq 0 ]; then
  echo "Error! Missing release type argument"
  echo ""
  echo_help
  exit 1
fi

# Show help message if -h, --help, or help passed
if [ $1 = "-h" ] || [ $1 = "--help" ] || [ $1 = help ]; then
  echo_help
  exit 0
fi

# Validate passed release type
if ! echo $RELEASE_TYPE | grep -q 'patch\|minor\|major'; then
  echo "Error! Invalid release type supplied"
  echo ""
  echo_help
  exit 1
fi

# Make sure our working dir is the repo root directory
cd "$(git rev-parse --show-toplevel)"

echo "Fetching git remotes"
git fetch

if ! git status | grep -q 'On branch master'; then
  echo "Error! Must be on master branch to publish"
  exit 1
fi

if ! git status | grep -q "Your branch is up to date with 'origin/master'."; then
  echo "Error! Must be up to date with origin/master to publish"
  exit 1
fi

if ! git status | grep -q 'working tree clean'; then
  echo "Error! Cannot publish with dirty working tree"
  exit 1
fi

echo "Installing dependencies according to lockfile"
yarn -s install --frozen-lockfile

echo "Linting, testing, and building"
yarn -s run ci

echo "Tagging and publishing $RELEASE_TYPE release"
yarn -s --ignore-scripts publish --$RELEASE_TYPE --access=public

echo "Pushing git commit and tag"
git push --follow-tags

cat << EOF
Publish successful!

Remember to create a release on GitHub with a changelog notes:

    https://github.com/stripe/stripe-js/releases/new

EOF
